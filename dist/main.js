!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){n(1),e.exports=n(4)},function(e,t,n){"use strict";const r=n(2);!function(e,t,n,o){let a=new WeakMap;class s{constructor(e){this.$wrapper=e,this.repLogs=[],a.set(this,new r(this.repLogs)),this.loadRepLogs(),this.$wrapper.on("click",".js-delete-rep-log",this.handleRepLogDelete.bind(this)),this.$wrapper.on("click","tbody tr",this.handleRowClick.bind(this)),this.$wrapper.on("submit",s._selectors.newRepForm,this.handleNewFormSubmit.bind(this))}static get _selectors(){return{newRepForm:".js-new-rep-log-form"}}loadRepLogs(){t.ajax({url:n.generate("rep_log_list")}).then(e=>{for(let t of e.items)this._addRow(t)})}updateTotalWeightLifted(){this.$wrapper.find(".js-total-weight").html(a.get(this).getTotalWeightString())}handleRepLogDelete(e){e.preventDefault();const n=t(e.currentTarget);o({title:"Delete this log?",text:"What? Did you not actually lift this?",showCancelButton:!0,showLoaderOnConfirm:!0,preConfirm:()=>this._deleteRepLog(n)}).catch(e=>{})}_deleteRepLog(e){e.addClass("text-danger"),e.find(".fa").removeClass("fa-trash").addClass("fa-spinner").addClass("fa-spin");const n=e.data("url"),r=e.closest("tr");return t.ajax({url:n,method:"DELETE"}).then(()=>{r.fadeOut("normal",()=>{this.repLogs.splice(r.data("key"),1),r.remove(),this.updateTotalWeightLifted()})})}handleRowClick(){console.log("row clicked!")}handleNewFormSubmit(e){e.preventDefault();const n=t(e.currentTarget),r={};for(let e of n.serializeArray())r[e.name]=e.value;this._saveRepLog(r).then(e=>{this._clearForm(),this._addRow(e)}).catch(e=>{this._mapErrorsToForm(e.errors)})}_saveRepLog(e){return new Promise((r,o)=>{const a=n.generate("rep_log_new");t.ajax({url:a,method:"POST",data:JSON.stringify(e)}).then((e,n,o)=>{t.ajax({url:o.getResponseHeader("Location")}).then(e=>{r(e)})}).catch(e=>{const t=JSON.parse(e.responseText);o(t)})})}_mapErrorsToForm(e){this._removeFormErrors();const n=this.$wrapper.find(s._selectors.newRepForm);for(let r of n.find(":input")){const n=t(r).attr("name"),o=t(r).closest(".form-group");if(!e[n])continue;const a=t('<span class="js-field-error help-block"></span>');a.html(e[n]),o.append(a),o.addClass("has-error")}}_removeFormErrors(){const e=this.$wrapper.find(s._selectors.newRepForm);e.find(".js-field-error").remove(),e.find(".form-group").removeClass("has-error")}_clearForm(){this._removeFormErrors();this.$wrapper.find(s._selectors.newRepForm)[0].reset()}_addRow(e){this.repLogs.push(e);const n=l(e),r=t(t.parseHTML(n));r.data("key",this.repLogs.length-1),this.$wrapper.find("tbody").append(r),this.updateTotalWeightLifted()}}const l=e=>`\n<tr data-weight="${e.totalWeightLifted}">\n    <td>${e.itemLabel}</td>\n    <td>${e.reps}</td>\n    <td>${e.totalWeightLifted}</td>\n    <td>\n        <a href="#"\n           class="js-delete-rep-log"\n           data-url="${e.links._self}"\n        >\n            <span class="fa fa-trash"></span>\n        </a>\n    </td>\n</tr>\n`;e.RepLogApp=s}(window,jQuery,Routing,swal)},function(e,t,n){(function(e){class t{constructor(e){this.repLogs=e}calculateTotalWeight(){return t._calculateWeights(this.repLogs)}getTotalWeightString(e=500){let t=this.calculateTotalWeight();return t>e&&(t=e+"+"),t+" lbs"}static _calculateWeights(e){let t=0;for(let n of e)t+=n.totalWeightLifted;return t}}e.exorts=t}).call(this,n(3)(e))},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(module,exports){!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s="./web/assets/js/RepLogApp.js")}({"./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */function(module,exports){eval('module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, "loaded", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, "id", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack:///(webpack)/buildin/module.js?')},"./web/assets/js/RepLogApp.js":
/*!************************************!*\
  !*** ./web/assets/js/RepLogApp.js ***!
  \************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nconst Helper = __webpack_require__(/*! ./RepLogAppHelper.js */ \"./web/assets/js/RepLogAppHelper.js\");\n\n(function(window, $, Routing, swal) {\n\n    let HelperInstances = new WeakMap();\n\n    class RepLogApp {\n        constructor($wrapper) {\n            this.$wrapper = $wrapper;\n            this.repLogs = [];\n\n            HelperInstances.set(this, new Helper(this.repLogs));\n\n            this.loadRepLogs();\n\n            this.$wrapper.on(\n                'click',\n                '.js-delete-rep-log',\n                this.handleRepLogDelete.bind(this)\n            );\n            this.$wrapper.on(\n                'click',\n                'tbody tr',\n                this.handleRowClick.bind(this)\n            );\n            this.$wrapper.on(\n                'submit',\n                RepLogApp._selectors.newRepForm,\n                this.handleNewFormSubmit.bind(this)\n            );\n        }\n\n        /**\n         * Call like this.selectors\n         */\n        static get _selectors() {\n            return {\n                newRepForm: '.js-new-rep-log-form'\n            }\n        }\n\n        loadRepLogs() {\n            $.ajax({\n                url: Routing.generate('rep_log_list'),\n            }).then(data => {\n                for (let repLog of data.items) {\n                    this._addRow(repLog);\n                }\n            })\n        }\n\n        updateTotalWeightLifted() {\n            this.$wrapper.find('.js-total-weight').html(\n                HelperInstances.get(this).getTotalWeightString()\n            );\n        }\n\n        handleRepLogDelete(e) {\n            e.preventDefault();\n\n            const $link = $(e.currentTarget);\n\n            swal({\n                title: 'Delete this log?',\n                text: 'What? Did you not actually lift this?',\n                showCancelButton: true,\n                showLoaderOnConfirm: true,\n                preConfirm: () => this._deleteRepLog($link)\n            }).catch((arg) => {\n                // canceling is cool!\n            });\n        }\n\n        _deleteRepLog($link) {\n            $link.addClass('text-danger');\n            $link.find('.fa')\n                .removeClass('fa-trash')\n                .addClass('fa-spinner')\n                .addClass('fa-spin');\n\n            const deleteUrl = $link.data('url');\n            const $row = $link.closest('tr');\n\n            return $.ajax({\n                url: deleteUrl,\n                method: 'DELETE'\n            }).then(() => {\n                $row.fadeOut('normal', () => {\n                    // we need to remove the repLog from this.repLogs\n                    // the \"key\" is the index to this repLog on this.repLogs\n                    this.repLogs.splice(\n                        $row.data('key'),\n                        1\n                    );\n\n                    $row.remove();\n\n                    this.updateTotalWeightLifted();\n                });\n            })\n        }\n\n        handleRowClick() {\n            console.log('row clicked!');\n        }\n\n        handleNewFormSubmit(e) {\n            e.preventDefault();\n\n            const $form = $(e.currentTarget);\n            const formData = {};\n\n            for (let fieldData of $form.serializeArray()) {\n                formData[fieldData.name] = fieldData.value\n            }\n\n            this._saveRepLog(formData)\n            .then((data) => {\n                this._clearForm();\n                this._addRow(data);\n            }).catch((errorData) => {\n                this._mapErrorsToForm(errorData.errors);\n            });\n        }\n\n        _saveRepLog(data) {\n            return new Promise((resolve, reject) => {\n                const url = Routing.generate('rep_log_new');\n\n                $.ajax({\n                    url,\n                    method: 'POST',\n                    data: JSON.stringify(data)\n                }).then((data, textStatus, jqXHR) => {\n                    $.ajax({\n                        url: jqXHR.getResponseHeader('Location')\n                    }).then((data) => {\n                        // we're finally done!\n                        resolve(data);\n                    });\n                }).catch((jqXHR) => {\n                    const errorData = JSON.parse(jqXHR.responseText);\n\n                    reject(errorData);\n                });\n            });\n        }\n\n        _mapErrorsToForm(errorData) {\n            this._removeFormErrors();\n            const $form = this.$wrapper.find(RepLogApp._selectors.newRepForm);\n\n            for (let element of $form.find(':input')) {\n                const fieldName = $(element).attr('name');\n                const $wrapper = $(element).closest('.form-group');\n                if (!errorData[fieldName]) {\n                    // no error!\n                    continue;\n                }\n\n                const $error = $('<span class=\"js-field-error help-block\"></span>');\n                $error.html(errorData[fieldName]);\n                $wrapper.append($error);\n                $wrapper.addClass('has-error');\n            }\n        }\n\n        _removeFormErrors() {\n            const $form = this.$wrapper.find(RepLogApp._selectors.newRepForm);\n            $form.find('.js-field-error').remove();\n            $form.find('.form-group').removeClass('has-error');\n        }\n\n        _clearForm() {\n            this._removeFormErrors();\n\n            const $form = this.$wrapper.find(RepLogApp._selectors.newRepForm);\n            $form[0].reset();\n        }\n\n        _addRow(repLog) {\n            this.repLogs.push(repLog);\n            // destructuring example\n            // let {id, itemLabel, reps, totallyMadeUpKey = 'whatever!'} = repLog;\n            // console.log(id, itemLabel, reps, totallyMadeUpKey);\n\n            const html = rowTemplate(repLog);\n            const $row = $($.parseHTML(html));\n            // store the repLogs index\n            $row.data('key', this.repLogs.length - 1);\n            this.$wrapper.find('tbody').append($row);\n\n            this.updateTotalWeightLifted();\n        }\n    }\n\n\n\n    const rowTemplate = (repLog) => `\n<tr data-weight=\"${repLog.totalWeightLifted}\">\n    <td>${repLog.itemLabel}</td>\n    <td>${repLog.reps}</td>\n    <td>${repLog.totalWeightLifted}</td>\n    <td>\n        <a href=\"#\"\n           class=\"js-delete-rep-log\"\n           data-url=\"${repLog.links._self}\"\n        >\n            <span class=\"fa fa-trash\"></span>\n        </a>\n    </td>\n</tr>\n`;\n\n    window.RepLogApp = RepLogApp;\n})(window, jQuery, Routing, swal);\n\n\n//# sourceURL=webpack:///./web/assets/js/RepLogApp.js?")},"./web/assets/js/RepLogAppHelper.js":
/*!******************************************!*\
  !*** ./web/assets/js/RepLogAppHelper.js ***!
  \******************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(module) {/**\n * A \"private\" object\n */\nclass Helper {\n    constructor(repLogs) {\n        this.repLogs = repLogs;\n    }\n\n    calculateTotalWeight() {\n        return Helper._calculateWeights(\n            this.repLogs\n        );\n    }\n\n    getTotalWeightString(maxWeight = 500) {\n        let weight = this.calculateTotalWeight();\n\n        if (weight > maxWeight) {\n            weight = maxWeight + '+';\n        }\n\n        return weight + ' lbs';\n    }\n\n    static _calculateWeights(repLogs) {\n        let totalWeight = 0;\n        for (let repLog of repLogs) {\n            totalWeight += repLog.totalWeightLifted;\n        }\n\n        return totalWeight;\n    }\n}\n\nmodule.exorts = Helper;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./web/assets/js/RepLogAppHelper.js?")}})}]);